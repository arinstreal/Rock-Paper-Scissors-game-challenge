{"version":3,"sources":["Components/RulesModal/RulesModal.module.scss","Components/ResultsMode/ResultsMode.module.scss","Components/GestureWrapper/GestureWrapper.module.scss","Components/SelectionPanel/SelectionPanel.module.scss","Components/ScorePanel/ScorePanel.module.scss","images/logo.svg","Components/ScorePanel/ScorePanel.tsx","images/bg-triangle.svg","images/icon-paper.svg","images/icon-rock.svg","images/icon-scissors.svg","constants.tsx","Components/GestureWrapper/GestureWrapper.tsx","Components/SelectionPanel/SelectionMode.tsx","Components/ResultsMode/ResultsMode.tsx","Components/SelectionPanel/SelectionPanel.tsx","images/icon-close.svg","images/image-rules.svg","Components/RulesModal/RulesModal.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","ScorePanel","score","className","styles","scorePanel","src","logo","alt","GESTURES","RESULTS","GESTURES_ARRAY","GestureWrapper","type","position","onClick","typeStyle","useMemo","image","paper","rock","scissors","handleOnClick","gestureWrapper","generateChoice","style","SelectionMode","setUserChoice","handleUserChoice","choice","triangle","bgTriangle","left","top","right","bottom","ResultsMode","userChoice","resetUserChoice","addUserPoint","useState","botChoice","setBotChoice","result","setResult","useEffect","setTimeout","botChoiceTmp","Math","floor","random","length","handlePlayAgain","resultsMode","choiceWrapper","resultWrapper","mobile","SelectionPanel","addPoint","resetGame","selectionPanel","none","RulesModal","isOpen","toggleClose","rulesModal","open","content","header","closeIcon","rules","App","isOpenRulesModal","setIsOpenRulesModal","setScore","handleRulesModal","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1978484.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rulesModal\":\"RulesModal_rulesModal__1CSfC\",\"open\":\"RulesModal_open__30JEm\",\"content\":\"RulesModal_content__2JzoZ\",\"header\":\"RulesModal_header__4l5RZ\",\"closeIcon\":\"RulesModal_closeIcon__1oJjR\",\"mobile\":\"RulesModal_mobile__3zKTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsMode\":\"ResultsMode_resultsMode__24EMD\",\"choiceWrapper\":\"ResultsMode_choiceWrapper__3kHLk\",\"resultWrapper\":\"ResultsMode_resultWrapper__1wo_t\",\"mobile\":\"ResultsMode_mobile__159wi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gestureWrapper\":\"GestureWrapper_gestureWrapper__2gPBt\",\"generateChoice\":\"GestureWrapper_generateChoice__2ee6K\",\"scissors\":\"GestureWrapper_scissors__L4pod\",\"paper\":\"GestureWrapper_paper__3NwOK\",\"rock\":\"GestureWrapper_rock__AU10Q\",\"lizard\":\"GestureWrapper_lizard__1aDFc\",\"spock\":\"GestureWrapper_spock__3Jm0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectionPanel\":\"SelectionPanel_selectionPanel__BiYo-\",\"none\":\"SelectionPanel_none__3rTUW\",\"triangle\":\"SelectionPanel_triangle__1mfON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scorePanel\":\"ScorePanel_scorePanel__1_9B9\",\"score\":\"ScorePanel_score__10lzz\"};","export default __webpack_public_path__ + \"static/media/logo.a4a2b39f.svg\";","import { FC } from \"react\";\nimport styles from \"./ScorePanel.module.scss\";\nimport logo from \"../../images/logo.svg\";\n\ninterface IScorePanel {\n  score: number;\n}\n\nconst ScorePanel: FC<IScorePanel> = ({score}: IScorePanel) => {\n  return (\n    <div className={styles.scorePanel}>\n      <img src={logo} alt=\"logo\"/>\n      <div className={styles.score}>\n        <div>Score</div>\n        <div>{score}</div>\n      </div>\n    </div>\n  )\n};\n\nexport default ScorePanel;","export default __webpack_public_path__ + \"static/media/bg-triangle.c0c30b56.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export const GESTURES = {\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n  ROCK: 'rock'\n};\n\nexport const RESULTS = {WINNER: 'you win', LOSE: 'you lose', DRAW: 'draw'};\nexport type RESULTS_TYPES = 'you win' | 'you lose' | 'draw';\n\n\nexport const GESTURES_ARRAY = [GESTURES.PAPER, GESTURES.SCISSORS, GESTURES.ROCK];\n\nexport type GESTURES_TYPES = 'paper' | 'scissors' | 'rock';\n\n","import { FC, useMemo } from \"react\";\nimport styles from \"./GestureWrapper.module.scss\";\nimport paper from \"../../images/icon-paper.svg\";\nimport rock from \"../../images/icon-rock.svg\";\nimport scissors from \"../../images/icon-scissors.svg\";\nimport { GESTURES, GESTURES_TYPES } from \"../../constants\";\n\ninterface IPosition {\n  top?: number | string,\n  right?: number | string,\n  bottom?: number | string,\n  left?: number | string\n}\n\ninterface IGestureWrapper {\n  type?: GESTURES_TYPES | null;\n  position?: IPosition;\n  onClick?: (choice: GESTURES_TYPES) => void;\n}\n\nconst GestureWrapper: FC<IGestureWrapper> = ({type, position, onClick}: IGestureWrapper) => {\n  const typeStyle = useMemo(() => {\n    switch (type) {\n      case GESTURES.PAPER:\n        return {image: paper, className: styles.paper};\n      case GESTURES.ROCK:\n        return {image: rock, className: styles.rock};\n      case GESTURES.SCISSORS:\n        return {image: scissors, className: styles.scissors};\n      default:\n        return {image: '', className: ''};\n    }\n  }, [type]);\n\n  const handleOnClick = () => {\n    if (onClick && type) onClick && onClick(type);\n  }\n\n  return (\n    <div\n      className={`${styles.gestureWrapper} ${!type ? styles.generateChoice : ''} ${typeStyle.className}`} style={position}\n      {...handleOnClick && {onClick: handleOnClick}}\n    >\n      {type && <img src={typeStyle.image} alt={type}/>}\n    </div>\n  )\n}\n\nexport default GestureWrapper;","import { FC } from \"react\";\nimport bgTriangle from \"../../images/bg-triangle.svg\";\nimport GestureWrapper from \"../GestureWrapper/GestureWrapper\";\nimport { GESTURES_TYPES } from \"../../constants\";\nimport styles from \"../SelectionPanel/SelectionPanel.module.scss\";\n\ninterface ISelectionMode {\n  setUserChoice: (choice: GESTURES_TYPES) => void;\n}\n\nconst SelectionMode: FC<ISelectionMode> = ({setUserChoice}: ISelectionMode) => {\n\n  const handleUserChoice = (choice: GESTURES_TYPES) => {\n    setUserChoice(choice);\n  }\n\n  return (\n    <div>\n      <img className={styles.triangle} src={bgTriangle} alt=\"bgTriangle\"/>\n      <GestureWrapper onClick={handleUserChoice} type=\"paper\" position={{left: 0, top: 0}}/>\n      <GestureWrapper onClick={handleUserChoice} type=\"scissors\" position={{top: 0, right: 0}}/>\n      <GestureWrapper onClick={handleUserChoice} type=\"rock\" position={{bottom: 0, left: '30%'}}/>\n    </div>\n  )\n}\n\nexport default SelectionMode;","import { FC, useEffect, useState } from \"react\";\nimport styles from \"./ResultsMode.module.scss\";\nimport GestureWrapper from \"../GestureWrapper/GestureWrapper\";\nimport { GESTURES, GESTURES_ARRAY, GESTURES_TYPES, RESULTS } from \"../../constants\";\n\ninterface IResultsMode {\n  userChoice: GESTURES_TYPES;\n  addUserPoint: () => void;\n  resetUserChoice: () => void;\n}\n\nconst ResultsMode: FC<IResultsMode> = ({userChoice, resetUserChoice, addUserPoint}: IResultsMode) => {\n  const [botChoice, setBotChoice] = useState<GESTURES_TYPES | null>(null);\n  const [result, setResult] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (userChoice) {\n      setTimeout(() => {\n        const botChoiceTmp = GESTURES_ARRAY[Math.floor(Math.random() * GESTURES_ARRAY.length)];\n        // @ts-ignore\n        setBotChoice(botChoiceTmp);\n      }, 500);\n    }\n  }, [userChoice]);\n\n  const getWinner = () => {\n    if (userChoice === botChoice) {\n      setResult(RESULTS.DRAW)\n    } else if (\n      (userChoice === GESTURES.PAPER && botChoice === GESTURES.ROCK) ||\n      (userChoice === GESTURES.ROCK && botChoice === GESTURES.SCISSORS) ||\n      (userChoice === GESTURES.SCISSORS && botChoice === GESTURES.ROCK)) {\n      setResult(RESULTS.WINNER);\n      addUserPoint();\n    } else setResult(RESULTS.LOSE);\n  }\n\n  useEffect(() => {\n    if (botChoice) {\n      setTimeout(() => {\n        getWinner();\n      }, 100);\n    }\n  }, [botChoice]);\n\n  const handlePlayAgain = () => {\n    resetUserChoice();\n    setBotChoice(null);\n  }\n\n  return (\n    <div>\n    <div className={styles.resultsMode}>\n      <div className={styles.choiceWrapper}>\n        <span>You picked</span>\n        <GestureWrapper type={userChoice}/>\n      </div>\n      <div className={styles.resultWrapper}>\n        <div>{result}</div>\n        <button className=\"secondary\" onClick={handlePlayAgain}>Play again</button>\n      </div>\n      <div className={styles.choiceWrapper}>\n        <span>The house picked</span>\n        <GestureWrapper type={botChoice}/>\n      </div>\n\n    </div>\n      <div className={`${styles.resultWrapper} ${styles.mobile}`}>\n        <div>{result}</div>\n        <button className=\"secondary\" onClick={handlePlayAgain}>Play again</button>\n      </div>\n    </div>\n  )\n}\n\nexport default ResultsMode;","import { FC, useState } from \"react\";\nimport styles from \"./SelectionPanel.module.scss\";\nimport { GESTURES_TYPES } from \"../../constants\";\nimport SelectionMode from \"./SelectionMode\";\nimport ResultsMode from \"../ResultsMode/ResultsMode\";\n\ninterface ISelectionPanel {\n  addPoint: () => void;\n  resetGame: () => void;\n}\n\nconst SelectionPanel: FC<ISelectionPanel> = ({addPoint, resetGame}: ISelectionPanel) => {\n  const [userChoice, setUserChoice] = useState<GESTURES_TYPES | null>(null);\n\n  const handleResetUserChoice = () => {\n    setUserChoice(null);\n  }\n\n  return (\n    <div>\n      {\n        userChoice &&\n        <ResultsMode userChoice={userChoice} resetUserChoice={handleResetUserChoice} addUserPoint={addPoint}/>\n      }\n      <div className={`${styles.selectionPanel} ${!userChoice ? '' : styles.none}`}>\n        <SelectionMode setUserChoice={setUserChoice}/>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectionPanel;","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","export default __webpack_public_path__ + \"static/media/image-rules.258b753f.svg\";","import { FC } from \"react\";\nimport styles from \"./RulesModal.module.scss\";\nimport closeIcon from \"../../images/icon-close.svg\";\nimport rules from \"../../images/image-rules.svg\";\n\ninterface IRulesModal {\n  isOpen?: boolean;\n  toggleClose: () => void;\n}\n\nconst RulesModal: FC<IRulesModal> = ({isOpen, toggleClose}: IRulesModal) => {\n  return (\n    <div className={`${styles.rulesModal} ${isOpen ? styles.open : ''}`}>\n      <div className={styles.content}>\n        <div className={styles.header}>\n          <span>Rules</span><img className={styles.closeIcon} onClick={toggleClose} alt=\"close\" src={closeIcon}/>\n        </div>\n        <img alt=\"rules\" src={rules}/>\n        <img className={`${styles.closeIcon} ${styles.mobile}`} onClick={toggleClose} alt=\"close\" src={closeIcon}/>\n      </div>\n    </div>\n  )\n}\n\nexport default RulesModal;","import './App.scss';\nimport ScorePanel from \"./Components/ScorePanel/ScorePanel\";\nimport SelectionPanel from \"./Components/SelectionPanel/SelectionPanel\";\nimport { useState } from \"react\";\nimport RulesModal from \"./Components/RulesModal/RulesModal\";\n\nfunction App() {\n  const [isOpenRulesModal, setIsOpenRulesModal] = useState(false);\n  const [score, setScore] = useState<number>(0);\n\n  const handleRulesModal = () => {\n    setIsOpenRulesModal(prev => !prev);\n  }\n\n  const handleAddPoint = () => setScore(prev => (prev + 1));\n  const resetGame = () => setScore(0);\n\n  return (\n    <div className=\"app\">\n      <ScorePanel score={score}/>\n      <SelectionPanel addPoint={handleAddPoint} resetGame={resetGame}/>\n      <div className=\"rules-wrapper\">\n        <button className=\"gradient\" onClick={handleRulesModal}>Rules</button>\n      </div>\n      {isOpenRulesModal}\n      <RulesModal toggleClose={handleRulesModal} isOpen={isOpenRulesModal}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}